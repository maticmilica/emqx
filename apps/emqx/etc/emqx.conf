listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
}

listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  ssl_options {
    keyfile = "{{ platform_etc_dir }}/certs/key.pem"
    certfile = "{{ platform_etc_dir }}/certs/cert.pem"
    cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
  }
}

listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  websocket.mqtt_path = "/mqtt"
}

listeners.wss.default {
  bind = "0.0.0.0:8084"
  max_connections = 512000
  websocket.mqtt_path = "/mqtt"
  ssl_options {
    keyfile = "{{ platform_etc_dir }}/certs/key.pem"
    certfile = "{{ platform_etc_dir }}/certs/cert.pem"
    cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
  }
}

# listeners.quic.default {
#  enabled = true
#  bind = "0.0.0.0:14567"
#  max_connections = 1024000
#  keyfile = "{{ platform_etc_dir }}/certs/key.pem"
#  certfile = "{{ platform_etc_dir }}/certs/cert.pem"
#}

##==================================================================
## Broker
##==================================================================
broker {
  ## System interval of publishing $SYS messages.
  ##
  ## @doc broker.sys_msg_interval
  ## ValueType: Duration | disabled
  ## Default: 1m
  sys_msg_interval = 1m

  ## System heartbeat interval of publishing following heart beat message:
  ##  - "$SYS/brokers/<node>/uptime"
  ##  - "$SYS/brokers/<node>/datetime"
  ##
  ## @doc broker.sys_heartbeat_interval
  ## ValueType: Duration
  ## Default: 30s | disabled
  sys_heartbeat_interval = 30s

  ## Session locking strategy in a cluster.
  ##
  ## @doc broker.session_locking_strategy
  ## ValueType: local | one | quorum | all
  ##   - local: only lock the session locally on the current node
  ##   - one: select only one remove node to lock the session
  ##   - quorum: select some nodes to lock the session
  ##   - all: lock the session on all of the nodes in the cluster
  ## Default: quorum
  session_locking_strategy = quorum

  ## Dispatch strategy for shared subscription
  ##
  ## @doc broker.shared_subscription_strategy
  ## ValueType: random | round_robin | sticky | hash | milica | advanced
  ##   - random: dispatch the message to a random selected subscriber
  ##   - round_robin: select the subscribers in a round-robin manner
  ##   - sticky: always use the last selected subscriber to dispatch,
  ##     until the susbcriber disconnected.
  ##   - hash: select the subscribers by the hash of clientIds
  ##   - milica: the best
  ## Default: round_robin
  shared_subscription_strategy = advanced

  ## Enable/disable shared dispatch acknowledgement for QoS1 and QoS2 messages
  ## This should allow messages to be dispatched to a different subscriber in
  ## the group in case the picked (based on shared_subscription_strategy) one # is offline
  ##
  ## @doc broker.shared_dispatch_ack_enabled
  ## ValueType: Boolean
  ## Default: false
  shared_dispatch_ack_enabled = false

  ## Enable batch clean for deleted routes.
  ##
  ## @doc broker.route_batch_clean
  ## ValueType: Boolean
  ## Default: true
  route_batch_clean = true

  ## Performance toggle for subscribe/unsubscribe wildcard topic.
  ## Change this toggle only when there are many wildcard topics.
  ##
  ## NOTE: when changing from/to 'global' lock, it requires all
  ## nodes in the cluster to be stopped before the change.
  ##
  ## @doc broker.perf.route_lock_type
  ## ValueType: key | tab | global
  ##  - key:   mnesia translational updates with per-key locks. recommended for single node setup.
  ##  - tab:   mnesia translational updates with table lock. recommended for multi-nodes setup.
  ##  - global: global lock protected updates. recommended for larger cluster.
  ## Default: key
  perf.route_lock_type = key

  ## Enable trie path compaction.
  ## Enabling it significantly improves wildcard topic subscribe
  ## rate, if wildcard topics have unique prefixes like:
  ## 'sensor/{{id}}/+/', where ID is unique per subscriber.
  ##
  ## Topic match performance (when publishing) may degrade if messages
  ## are mostly published to topics with large number of levels.
  ##
  ## NOTE: This is a cluster-wide configuration.
  ## It requires all nodes to be stopped before changing it.
  ##
  ## @doc broker.perf.trie_compaction
  ## ValueType: Boolean
  ## Default: true
  perf.trie_compaction = true
}
